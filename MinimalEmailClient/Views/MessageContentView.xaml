<UserControl x:Name="userControl"
             x:Class="MinimalEmailClient.Views.MessageContentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:views="clr-namespace:MinimalEmailClient.Views"
             xmlns:viewModels="clr-namespace:MinimalEmailClient.ViewModels"
             xmlns:converters="clr-namespace:MinimalEmailClient.Views.Converters"
             xmlns:viewUtilities="clr-namespace:MinimalEmailClient.Views.Utilities"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="800"
             Background="White"
             Loaded="UserControl_Loaded"
             Unloaded="userControl_Unloaded"
             UseLayoutRounding="True">

    <UserControl.DataContext>
        <viewModels:MessageContentViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="InverseBoolToHiddenConverter" TrueValue="Hidden" FalseValue="Visible" />
        <converters:FileSizeToStringConverter x:Key="FileSizeToStringConverter" />
        <converters:FilePathToIconImageConverter x:Key="FilePathToIconImageConverter" />
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <!-- Popup for writing a new message -->
        <prism:InteractionRequestTrigger SourceObject="{Binding WriteNewMessagePopupRequest, Mode=OneWay}">
            <prism:PopupWindowAction>
                <prism:PopupWindowAction.WindowContent>
                    <views:NewEmailView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <!-- Menu Bar -->
        <Menu DockPanel.Dock="Top" BorderThickness="0" Background="White" BorderBrush="AliceBlue">
            <MenuItem Header="View">
                <MenuItem x:Name="browserViewMenuItem" Header="Browser" IsCheckable="True" Click="browserViewMenuItem_Click" />
                <MenuItem x:Name="textViewMenuItem" Header="Text" IsCheckable="True" Click="textViewMenuItem_Click" />
                <MenuItem x:Name="htmlViewMenuItem" Header="HTML" IsCheckable="True" Click="htmlViewMenuItem_Click" />
                <MenuItem x:Name="processedHtmlViewMenuItem" Header="Processed HTML" IsCheckable="True" Click="processedHtmlViewMenuItem_Click" />
                <MenuItem x:Name="sourceViewMenuItem" Header="Source" IsCheckable="True" Click="sourceViewMenuItem_Click" />
            </MenuItem>
        </Menu>

        <!-- Toolbar -->
        <ToolBarPanel DockPanel.Dock="Top" Background="White">
            <ToolBar ToolBarTray.IsLocked="True" Background="White">
                <!-- 'Reply' button -->
                <Button Command="{Binding ReplyMessageCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="pack://application:,,,/MinimalEmailClient;component/Resources/Images/reply.png" Stretch="Uniform" Height="20" Width="20" />
                        <TextBlock Text="Reply" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarPanel>

        <Grid Margin="8, 0, 8, 8">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Subject -->
            <Border x:Name="subjectBorder" Grid.Row="0" Margin="0,8">
                <TextBlock Margin="0,0,0,8" Text="{Binding Subject, Mode=OneWay}" FontSize="18" Width="{Binding ElementName=subjectBorder, Path=ActualWidth, Mode=OneWay}" TextWrapping="Wrap" />
            </Border>

            <Border Grid.Row="1" Margin="5,0,5,10">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- From -->
                        <TextBlock Grid.Column="0" Text="From" FontSize="14" Foreground="#FF6A6A6A" Margin="0,0,4,0" />
                        <TextBlock Grid.Column="1" Text="{Binding Sender, Mode=OneWay}" FontSize="14" />

                        <!-- Date -->
                        <TextBlock Grid.Column="2" Text="{Binding Date, Mode=OneWay}" Foreground="Gray" />
                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- To -->
                        <TextBlock Grid.Column="0" Text="to" FontSize="14" Foreground="#FF6A6A6A" Margin="0,0,4,0" />
                        <TextBlock Grid.Column="1" Text="{Binding Recipient, Mode=OneWay}" FontSize="14" />
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Attachments -->
            <ListView x:Name="AttachmentListView" Grid.Row="2" ItemsSource="{Binding Attachments}" BorderThickness="0,1,0,0" BorderBrush="{StaticResource DefaultBorderBrush}" Padding="0,4" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.Style>
                    <Style TargetType="ListView">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Attachments.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>

                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border x:Name="ItemBoxBorder" Margin="0,0,8,0">
                                            <StackPanel Orientation="Horizontal" Margin="3">
                                            <Image Height="16" Margin="0,0,4,0" Source="{Binding FilePath, Converter={StaticResource FilePathToIconImageConverter}}" SnapsToDevicePixels="True" />
                                                <TextBlock VerticalAlignment="Center" Text="{Binding FileName}" />
                                                <TextBlock VerticalAlignment="Center" Text="(" Margin="3,0,0,0" />
                                                <TextBlock VerticalAlignment="Center" Text="{Binding FileSizeBytes, Converter={StaticResource FileSizeToStringConverter}}" />
                                                <TextBlock VerticalAlignment="Center" Text=")" />
                                            </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="ItemBoxBorder" Property="Background" Value="{StaticResource DefaultHighlightBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="AttachmentOpenMenu" Header="Open" Click="AttachmentOpenMenu_Click" />
                        <MenuItem x:Name="AttachmentSaveAsMenu" Header="Save As..." Click="AttachmentSaveAsMenu_Click" />
                        <MenuItem x:Name="AttachmentSaveAllMenu" Header="Save All Attachments..." Click="AttachmentSaveAllMenu_Click" />
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>

            <!-- Message body -->
            <Border Grid.Row="3" Padding="0,15,0,0"  BorderThickness="0,1,0,0" BorderBrush="{StaticResource DefaultBorderBrush}">
                <xctk:BusyIndicator IsBusy="{Binding Loading}" BusyContent="Downloading message ..." >
                    <TabControl x:Name="msgTabControl" SelectedIndex="{Binding ElementName=userControl, Path=SelectedTabIndex}" TabStripPlacement="Bottom" BorderThickness="0" >
                        <TabItem Header="Text" Visibility="Collapsed">
                            <!-- Visibility: Need to hide the WebBrowser control while busy indicator is on because it kills the busy indicator for some reason. -->
                            <WebBrowser viewUtilities:WebBrowserHelper.Html="{Binding ProcessedHtmlBody}" Visibility="{Binding Loading, Converter={StaticResource InverseBoolToHiddenConverter}}" />
                        </TabItem>
                        <TabItem Header="Text" Visibility="Collapsed">
                            <ScrollViewer>
                                <TextBox x:Name="textBodyTextBox" BorderThickness="0" Text="{Binding TextBody, Mode=OneWay}" FontSize="16" IsReadOnly="True" TextWrapping="Wrap" TextChanged="textBodyTextBox_TextChanged" />
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="HTML" Visibility="Collapsed">
                            <ScrollViewer>
                                <TextBox x:Name="htmlBodyTextBox" BorderThickness="0" Text="{Binding HtmlBody, Mode=OneWay}" FontSize="16" IsReadOnly="True" TextWrapping="Wrap" TextChanged="htmlBodyTextBox_TextChanged" />
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Process HTML" Visibility="Collapsed">
                            <ScrollViewer>
                                <TextBox x:Name="processedHtmlBodyTextBox" BorderThickness="0" Text="{Binding ProcessedHtmlBody, Mode=OneWay}" FontSize="16" IsReadOnly="True" TextWrapping="Wrap" />
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Source" Visibility="Collapsed">
                            <ScrollViewer>
                                <TextBox x:Name="sourceTextBox" BorderThickness="0" Text="{Binding Body, Mode=OneWay}" FontSize="12" FontFamily="Consolas" Background="#EEF0EF" IsReadOnly="True" TextWrapping="Wrap" />
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </xctk:BusyIndicator>
            </Border>

            <Button x:Name="CloseCommandRelayButton" Visibility="Hidden" Command="{Binding HandleUiCloseCommand}" />
        </Grid>
    </DockPanel>
</UserControl>
